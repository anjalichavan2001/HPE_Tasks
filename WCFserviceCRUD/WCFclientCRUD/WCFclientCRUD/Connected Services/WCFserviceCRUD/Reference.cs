//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFclientCRUD.WCFserviceCRUD {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFserviceCRUD.IWCFserviceCRUD")]
    public interface IWCFserviceCRUD {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFserviceCRUD/InsertEmployee", ReplyAction="http://tempuri.org/IWCFserviceCRUD/InsertEmployeeResponse")]
        string InsertEmployee(string fname, string lname, string city, decimal contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFserviceCRUD/InsertEmployee", ReplyAction="http://tempuri.org/IWCFserviceCRUD/InsertEmployeeResponse")]
        System.Threading.Tasks.Task<string> InsertEmployeeAsync(string fname, string lname, string city, decimal contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFserviceCRUD/UpdateEmployee", ReplyAction="http://tempuri.org/IWCFserviceCRUD/UpdateEmployeeResponse")]
        string UpdateEmployee(int empid, string fname, string lname, string city, decimal contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFserviceCRUD/UpdateEmployee", ReplyAction="http://tempuri.org/IWCFserviceCRUD/UpdateEmployeeResponse")]
        System.Threading.Tasks.Task<string> UpdateEmployeeAsync(int empid, string fname, string lname, string city, decimal contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFserviceCRUD/DeleteEmployee", ReplyAction="http://tempuri.org/IWCFserviceCRUD/DeleteEmployeeResponse")]
        string DeleteEmployee(int empid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFserviceCRUD/DeleteEmployee", ReplyAction="http://tempuri.org/IWCFserviceCRUD/DeleteEmployeeResponse")]
        System.Threading.Tasks.Task<string> DeleteEmployeeAsync(int empid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFserviceCRUD/GetAllEmployees", ReplyAction="http://tempuri.org/IWCFserviceCRUD/GetAllEmployeesResponse")]
        System.Data.DataTable GetAllEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFserviceCRUD/GetAllEmployees", ReplyAction="http://tempuri.org/IWCFserviceCRUD/GetAllEmployeesResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllEmployeesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFserviceCRUDChannel : WCFclientCRUD.WCFserviceCRUD.IWCFserviceCRUD, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFserviceCRUDClient : System.ServiceModel.ClientBase<WCFclientCRUD.WCFserviceCRUD.IWCFserviceCRUD>, WCFclientCRUD.WCFserviceCRUD.IWCFserviceCRUD {
        
        public WCFserviceCRUDClient() {
        }
        
        public WCFserviceCRUDClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCFserviceCRUDClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFserviceCRUDClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFserviceCRUDClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string InsertEmployee(string fname, string lname, string city, decimal contact) {
            return base.Channel.InsertEmployee(fname, lname, city, contact);
        }
        
        public System.Threading.Tasks.Task<string> InsertEmployeeAsync(string fname, string lname, string city, decimal contact) {
            return base.Channel.InsertEmployeeAsync(fname, lname, city, contact);
        }
        
        public string UpdateEmployee(int empid, string fname, string lname, string city, decimal contact) {
            return base.Channel.UpdateEmployee(empid, fname, lname, city, contact);
        }
        
        public System.Threading.Tasks.Task<string> UpdateEmployeeAsync(int empid, string fname, string lname, string city, decimal contact) {
            return base.Channel.UpdateEmployeeAsync(empid, fname, lname, city, contact);
        }
        
        public string DeleteEmployee(int empid) {
            return base.Channel.DeleteEmployee(empid);
        }
        
        public System.Threading.Tasks.Task<string> DeleteEmployeeAsync(int empid) {
            return base.Channel.DeleteEmployeeAsync(empid);
        }
        
        public System.Data.DataTable GetAllEmployees() {
            return base.Channel.GetAllEmployees();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllEmployeesAsync() {
            return base.Channel.GetAllEmployeesAsync();
        }
    }
}
