//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CRUD_Client.WebServiceCRUD {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WebServiceCRUD.WebServiceCRUDSoap")]
    public interface WebServiceCRUDSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertEmployee", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsertEmployee(string fname, string lname, string city, decimal contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertEmployee", ReplyAction="*")]
        System.Threading.Tasks.Task<string> InsertEmployeeAsync(string fname, string lname, string city, decimal contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateEmployee", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateEmployee(int empid, string fname, string lname, string city, decimal contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateEmployee", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateEmployeeAsync(int empid, string fname, string lname, string city, decimal contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteEmployee", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DeleteEmployee(int empid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteEmployee", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DeleteEmployeeAsync(int empid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllEmployees", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetAllEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllEmployees", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllEmployeesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebServiceCRUDSoapChannel : CRUD_Client.WebServiceCRUD.WebServiceCRUDSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServiceCRUDSoapClient : System.ServiceModel.ClientBase<CRUD_Client.WebServiceCRUD.WebServiceCRUDSoap>, CRUD_Client.WebServiceCRUD.WebServiceCRUDSoap {
        
        public WebServiceCRUDSoapClient() {
        }
        
        public WebServiceCRUDSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebServiceCRUDSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceCRUDSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceCRUDSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string InsertEmployee(string fname, string lname, string city, decimal contact) {
            return base.Channel.InsertEmployee(fname, lname, city, contact);
        }
        
        public System.Threading.Tasks.Task<string> InsertEmployeeAsync(string fname, string lname, string city, decimal contact) {
            return base.Channel.InsertEmployeeAsync(fname, lname, city, contact);
        }
        
        public string UpdateEmployee(int empid, string fname, string lname, string city, decimal contact) {
            return base.Channel.UpdateEmployee(empid, fname, lname, city, contact);
        }
        
        public System.Threading.Tasks.Task<string> UpdateEmployeeAsync(int empid, string fname, string lname, string city, decimal contact) {
            return base.Channel.UpdateEmployeeAsync(empid, fname, lname, city, contact);
        }
        
        public string DeleteEmployee(int empid) {
            return base.Channel.DeleteEmployee(empid);
        }
        
        public System.Threading.Tasks.Task<string> DeleteEmployeeAsync(int empid) {
            return base.Channel.DeleteEmployeeAsync(empid);
        }
        
        public System.Data.DataTable GetAllEmployees() {
            return base.Channel.GetAllEmployees();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllEmployeesAsync() {
            return base.Channel.GetAllEmployeesAsync();
        }
    }
}
